---
title: "Northampton city center planting sites"
format:
  html:
    embed-resources: true
    header-includes: '<link rel="icon" type="image/png" href="icons8-oak-tree-48.png">'
    page-layout: full
execute:
  echo: false
  message: false
  warning: false
---
<style>
.dataTables_info {
    padding-right: 20px;
}

/* Make the Street selector draw on top of the map's zoom control */
.selectize-dropdown {
    z-index: 2000;
}
</style>

Possible planting sites in Northampton, Florence and Leeds city centers,
as surveyed by members and volunteers of the 
Northampton Urban Forestry Commission.

```{r libraries, include=FALSE}
library(tidyverse)
library(crosstalk)
library(DT)
library(leaflet)
library(sf)
```

```{r data, include=FALSE}
qmile_raw = read_sf(here::here('Trees/Quadrant maps/All planting sites with data.gpkg')) |> 
  st_transform(4326)

qmile = qmile_raw |> 
  select(-c(Latitude, Longitude, y_proj, x_proj, `Site ID`, Sidewalk,
            `Street number`, `Street name`, `Street ext`)) |> 
  select(ID=ident, Address, Count=Number, Owner=Ownership, `Under wire`, Location, 
         everything()) |> 
  mutate(
    Comments = if_else(is.na(Comments), '', Comments),
    Count_str = case_when(
      Count=='1' ~ '1 tree',
      is.na(Count) ~ '',
      .default = str_glue('{Count} trees')
    ),
    Location = case_match(Location,
      'F' ~ 'Front',
      'S' ~ 'Side',
      'B' ~ 'Back',
      'N/A' ~ '',
      NA ~ '',
      .default = Location
    ),
    Size = str_replace_all(Area, c(S='Small', M='Medium', N='Medium', L='Large')),
    label=unclass(str_glue('{ID} {Address} {Location}, {Size}, {Count_str}<br>{Comments}')) |>
      lapply(htmltools::HTML),
    Owner = factor(Owner, levels=c('B', 'C', 'R', 'S', '?')),
    `Under wire` = if_else(`Under wire` %in% c('1Y, 1N', 'Y/N', 'N/Y'), 'B', `Under wire`),
         `Under wire` = factor(`Under wire`, levels=c('Y', 'N', 'B', 'X', '?')))

shared_qmile =  SharedData$new(qmile)
```

---

Select streets or click the checkboxes to filter the data shown on the map and in the table below.

```{r map}
filter_select('street', 'Street', shared_qmile, ~Street)

filter_checkbox('sector', 'Sector', shared_qmile, ~Sector, inline=TRUE)
filter_checkbox("own", "Ownership (B = Tree belt; C = city property; R = ROW; S = Setback; ? = uncertain)", 
                shared_qmile, ~Owner, inline = TRUE)
filter_checkbox('under', 'Under wire? (Y = yes; N = No; B = Both, when > 1 tree; X = next to)', 
                shared_qmile, ~`Under wire`, inline=TRUE)

# Environmental justice communities
ej = read_sf('~/Dev/ej2020/ej2020_gdb.zip') |> 
  filter(MUNICIPALITY=='Northampton') |> 
  st_transform(crs=4326)

centers = read_sf(here::here('Shapefiles/CityCenters.gpkg'), 
                  layer='CityCenterPolys') |> 
  st_make_valid() |> 
  st_transform(4326)

# Wards
wards = read_sf(here::here(
  'Shapefiles/Wards_Precincts_2020_Northampton_20211022/Wards_Precincts_2020_Northampton.shp')) |> 
  mutate(ward=str_sub(WardPrec, 1, 1)) |> 
  group_by(ward) |> 
  summarize() |> 
  st_transform(4326)

ward_palette = colorFactor(RColorBrewer::brewer.pal(7, 'Pastel1'), wards$ward)

map = leaflet(width='95%', height='700px') %>% 
  setView(-72.667, 42.330, 12) %>% 
  addProviderTiles('CartoDB.Positron', group='Basic map') %>% 
  addTiles(group='OpenStreetMap') %>% 
  addProviderTiles('Esri.WorldImagery', group='Satellite') |> 
  addPolygons(data=ej, weight=1, fillOpacity=0.1, color='black',
              group='EJ') |> 
  addPolygons(data=centers, weight=1, fillOpacity=0.1, color='black',
              group='City centers') |> 
  addPolygons(data=wards, label=~paste('Ward', ward), group='Wards',
              weight=1, fillOpacity=0.2, fillColor=~ward_palette(ward)) |> 
  addCircleMarkers(data=shared_qmile, radius=~5, label=~label,
                   group='Trees',
                   stroke=FALSE, fillColor="#1B9E77", fillOpacity=0.5) |> 
  addLayersControl(baseGroups=c('Basic map', 'OpenStreetMap', 'Satellite'),
    overlayGroups=c('Trees', 'City centers', 'EJ', 'Wards'),
    options=layersControlOptions(collapsed=FALSE)) |> 
  hideGroup('Wards')
  
map
```

---

```{r table}
datatable(shared_qmile |> st_drop_geometry(), rownames = FALSE,
          extensions = 'Buttons', 
          options = list(
            columnDefs = list(list(visible=FALSE, targets=c('geom', 'label'))),
            dom = 'riBtlp',
            buttons = list(list(
              extend = 'collection',
              buttons = c('csv', 'excel'),
              text = 'Download selected sites'
            ))
          ))
```

<small>Copyright `r format(Sys.Date(), '%Y')` Kent S Johnson
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">
  <img alt="Creative Commons License" style="border-width:0;vertical-align:middle;display:inline" 
  src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png" target="_blank"/></a>
  <span style='float:right;font-style: italic;'>`r Sys.Date()`</span></small>